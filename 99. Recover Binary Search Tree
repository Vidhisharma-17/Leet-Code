class Solution {
public:
    void recoverTree(TreeNode* root) {
        TreeNode* first=nullptr;
        TreeNode* second=nullptr;
        vector<TreeNode*> temp;
        inorder(root,temp);
        int n=temp.size();
        for(int i=0;i<n-1;i++){
            if(temp[i]->val > temp[i+1]->val){
                if(!first){
                    first=temp[i];
                }
                second=temp[i+1];
            }
        }
            if(first && second){
                int rev=first->val;
                first->val=second->val;
                second->val=rev;
            }
    }
    
    void inorder(TreeNode* node,vector<TreeNode*>&temp){    
        if(!node) return;
        inorder(node->left,temp);
        temp.push_back(node);
        inorder(node->right,temp);
        
    }
};
